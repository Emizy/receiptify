from django.contrib.auth.models import AbstractUser
from django.db import models
from apps.utils.abstracts import AbstractUUID


class User(AbstractUser, AbstractUUID):
    """
    USER MODELS
    """
    mobile = models.CharField(unique=True, max_length=20)
    email = models.EmailField(max_length=255, null=True, blank=True)

    class Meta:
        db_table = 'user'
        ordering = ('-date_joined',)

    def __str__(self):
        return self.email


class Customer(models.Model):
    user = models.ForeignKey(User, on_delete=models.CASCADE, related_name='user_receipt')
    name = models.CharField(max_length=255)
    email = models.EmailField(max_length=255)
    mobile = models.CharField(max_length=255)
    address = models.TextField(default='')
    date_created = models.DateTimeField(auto_now_add=True, editable=False, null=True, blank=True)

    class Meta:
        db_table = 'customers'
        ordering = ('-date_created',)


class Order(models.Model):
    customer = models.ForeignKey(Customer, on_delete=models.CASCADE, related_name='customer_obj')
    date_created = models.DateTimeField(auto_now_add=True, editable=False, null=True, blank=True)

    class Meta:
        db_table = 'orders'
        ordering = ('-date_created',)


class OrderItem(models.Model):
    order = models.ForeignKey(Order, on_delete=models.CASCADE, related_name='order_obj')
    name = models.CharField(max_length=255)
    price = models.FloatField(default=0.0)
    date_created = models.DateTimeField(auto_now_add=True, editable=False, null=True, blank=True)

    class Meta:
        db_table = 'order_item'
        ordering = ('-date_created',)


class ReceiptHistory(models.Model):
    """
    Class handle keeping track of all reciept generated by the user on the system
    """
    order = models.ForeignKey(Order, on_delete=models.CASCADE, related_name='order_receipt', null=True, blank=True)
    pdf = models.FileField(upload_to='pdf/', null=True, blank=True)
    date_created = models.DateTimeField(auto_now_add=True, editable=False, null=True, blank=True)

    class Meta:
        db_table = 'receipt_history'
        ordering = ('-date_created',)

    def __str__(self):
        return f'User: {self.order.customer.name} Name: {self.pdf}'
